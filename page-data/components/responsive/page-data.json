{"componentChunkName":"component---src-templates-component-page-template-jsx","path":"/components/responsive/","result":{"data":{"mdx":{"id":"02185ffb-3aae-5a31-aca1-aac9f5144d25","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Responsive Components\",\n  \"type\": \"component\",\n  \"components\": [\"ExtraSmall\", \"Small\", \"Medium\", \"Large\", \"ExtraLarge\", \"ExtraExtraLarge\", \"LargerThanExtraSmall\"],\n  \"categories\": [\"Layout\"],\n  \"status\": \"Reassessing\",\n  \"designStatus\": \"Done\",\n  \"devStatus\": \"TBD\",\n  \"notes\": \"Consider a different strategy: export breakpoint constants and a passthrough to react-responsive. Current components are less flexible than needed ( from x-small to medium is not possible without strange repetition).\\n\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", {\n    \"id\": \"props\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#props\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"Props\"), mdx(\"p\", null, \"Provides several wrapper components that support hiding/showing components for specific screen sizes based on \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://getbootstrap.com/docs/4.0/layout/overview/#responsive-breakpoints\"\n  }, \"Bootstrap's responsive breakpoints\"), \". This enables \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Paragon\"), \" components to create mobile-specific UIs (e.g., simplifying the UX of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Pagination\"), \" for mobile devices).\"), mdx(\"p\", null, \"The following responsive components are available:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ExtraSmall\"), \" (max-width: 575)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Small\"), \" (min-width: 576; max-width: 767)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Medium\"), \" (min-width: 768; max-width: 991)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Large\"), \" (min-width: 992; max-width: 1199)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ExtraLarge\"), \" (min-width: 1200; max-width: 1399)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ExtraExtraLarge\"), \" (min-width: 1400)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"LargerThanExtraSmall\"), \" (min-width: 576)\")), mdx(\"h2\", {\n    \"id\": \"example-usage\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#example-usage\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"Example Usage\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<ExtraSmall>\\n    <p>This text will only show on extra small screens.</p>\\n</ExtraSmall>\\n\\n<Large>\\n    <p>This text will only show on large screens.</p>\\n</Large>\\n\\n<LargerThanExtraSmall>\\n    <p>This text will only show on screens larger than extra small.</p>\\n</LargerThanExtraSmall>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Responsive Components","status":"Reassessing","notes":"Consider a different strategy: export breakpoint constants and a passthrough to react-responsive. Current components are less flexible than needed ( from x-small to medium is not possible without strange repetition).\n","components":["ExtraSmall","Small","Medium","Large","ExtraLarge","ExtraExtraLarge","LargerThanExtraSmall"]}},"components":{"nodes":[{"displayName":"ExtraSmall","props":[]},{"displayName":"Small","props":[]},{"displayName":"Medium","props":[]},{"displayName":"Large","props":[]},{"displayName":"ExtraLarge","props":[]},{"displayName":"ExtraExtraLarge","props":[]},{"displayName":"LargerThanExtraSmall","props":[]}]}},"pageContext":{"id":"02185ffb-3aae-5a31-aca1-aac9f5144d25","components":["ExtraSmall","Small","Medium","Large","ExtraLarge","ExtraExtraLarge","LargerThanExtraSmall"]}},"staticQueryHashes":["1303225137","3649515864","63159454"]}