{"componentChunkName":"component---src-templates-component-page-template-jsx","path":"/components/alert/","result":{"data":{"mdx":{"id":"a499cf8f-0447-572d-89f6-0d8948e43b56","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Alert\",\n  \"type\": \"component\",\n  \"categories\": [\"Status & metadata\"],\n  \"status\": \"Stable\",\n  \"designStatus\": \"Done\",\n  \"devStatus\": \"Done\",\n  \"notes\": \"\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", {\n    className: \"lead\"\n  }, \"This is a pass through component from React-Bootstrap.\", mdx(\"br\", null), mdx(\"a\", {\n    href: \"https://react-bootstrap.github.io/components/alerts/\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, \"See React-Bootstrap for documentation.\")), mdx(\"h3\", null, \"Basic Usage\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, \"<>\\n<Alert variant=\\\"success\\\">\\n  This is a \\\"success\\\" alert with{' '}\\n  <Alert.Link href=\\\"#\\\">an example link</Alert.Link>. Give it a click if you\\n  like.\\n</Alert>\\n<Alert variant=\\\"info\\\">\\n  This is a \\\"info\\\" alert with{' '}\\n  <Alert.Link href=\\\"#\\\">an example link</Alert.Link>. Give it a click if you\\n  like.\\n</Alert>\\n<Alert variant=\\\"danger\\\">\\n  This is a \\\"danger\\\" alert with{' '}\\n  <Alert.Link href=\\\"#\\\">an example link</Alert.Link>. Give it a click if you\\n  like.\\n</Alert>\\n<Alert variant=\\\"warning\\\">\\n  This is a \\\"warning\\\" alert with{' '}\\n  <Alert.Link href=\\\"#\\\">an example link</Alert.Link>. Give it a click if you\\n  like.\\n</Alert>\\n</>\\n\")), mdx(\"h5\", null, \"Variants\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, \"<>\\n<Alert variant=\\\"success\\\" dismissible>\\n  <Icon src={CheckCircle} className=\\\"alert-icon\\\"/>\\n  <Alert.Heading>Hey, nice to see you</Alert.Heading>\\n  <p>\\n    Aww yeah, you successfully read this important alert message. This example\\n    text is going to run a bit longer so that you can see how spacing within an\\n    alert works with this kind of content.\\n  </p>\\n</Alert>\\n<Alert variant=\\\"warning\\\" dismissible>\\n  <Icon src={WarningFilled} className=\\\"alert-icon\\\"/>\\n  <Alert.Heading>Hey, nice to see you</Alert.Heading>\\n  <p>\\n    Aww yeah, you successfully read this important alert message. This example\\n    text is going to run a bit longer so that you can see how spacing within an\\n    alert works with this kind of content.\\n  </p>\\n</Alert>\\n<Alert variant=\\\"danger\\\" dismissible>\\n  <Icon src={Info} className=\\\"alert-icon\\\"/>\\n  <Alert.Heading>Hey, nice to see you</Alert.Heading>\\n  <p>\\n    Aww yeah, you successfully read this important alert message. This example\\n    text is going to run a bit longer so that you can see how spacing within an\\n    alert works with this kind of content.\\n  </p>\\n</Alert>\\n</>\\n\")), mdx(\"h5\", null, \"Kitchen Sink\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, \"<Alert variant=\\\"success\\\" dismissible>\\n  <Alert.Heading>Hey, nice to see you</Alert.Heading>\\n  <p>\\n    Aww yeah, you successfully read this important alert message. This example\\n    text is going to run a bit longer so that you can see how spacing within an\\n    alert works with this kind of content.\\n  </p>\\n  <hr />\\n  <p className=\\\"mb-0\\\">\\n    Whenever you need to, be sure to use margin utilities to keep things nice\\n    and tidy.\\n  </p>\\n</Alert>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Alert","status":"Stable","notes":""}},"components":{"nodes":[]}},"pageContext":{"id":"a499cf8f-0447-572d-89f6-0d8948e43b56","components":[]}},"staticQueryHashes":["1303225137","3649515864","63159454"]}