{"version":3,"sources":["webpack://paragon-pattern-library-documentation/./src/pages/insights.jsx"],"names":["dependentProjects","dependentProjectsUsages","dependentUsage","count","usages","length","componentsUsage","accumulator","project","Object","keys","forEach","componentName","concat","name","folderName","version","componentUsageCount","ProjectsUsage","className","DataTable","isSortable","itemCount","data","columns","Header","accessor","content","ComponentUsage","componentUsageInProjects","ComponentsUsage","sort","map","key","InsightsPage","Container","size","SEO","title","Tabs","defaultActiveKey","id","Tab","eventKey"],"mappings":"mhyJAQA,IAAMA,EAAoBC,OAA4B,SAAAC,GAAc,cAC/DA,GAD+D,IAElEC,MAAOD,EAAeE,OAAOC,YAGzBC,EAAkBL,UAA+B,SAACM,EAAaC,GAYnE,OAXAC,OAAOC,KAAKF,EAAQJ,QAAQO,SAAQ,SAAAC,GAC7BL,EAAYK,KACfL,EAAYK,GAAiB,IAE/BL,EAAYK,GAAiBL,EAAYK,GAAeC,OAAO,CAC7DC,KAAMN,EAAQM,KACdC,WAAYP,EAAQO,WACpBC,QAASR,EAAQQ,QACjBC,oBAAqBT,EAAQJ,OAAOQ,GAAeP,YAGhDE,IACN,IAGGW,EAAgB,kBACpB,uBAAKC,UAAU,aACb,sBAAIA,UAAU,QAAd,0CACA,gBAACC,EAAA,EAAD,CACEC,YAAU,EACVC,UAAWtB,EAAkBK,OAC7BkB,KAAMvB,EACNwB,QAAS,CACP,CAAEC,OAAQ,eAAgBC,SAAU,cACpC,CAAED,OAAQ,kBAAmBC,SAAU,aAGzC,gBAACN,EAAA,kBAAD,MACA,gBAACA,EAAA,QAAD,MACA,gBAACA,EAAA,aAAD,CAAsBO,QAAQ,gBAC9B,gBAACP,EAAA,cAAD,SAOAQ,EAAiB,SAAC,GAAD,IAAGd,EAAH,EAAGA,KAAMe,EAAT,EAASA,yBAAT,OACrB,uBAAKV,UAAU,QACb,sBAAIA,UAAU,QAAQL,GACtB,gBAACM,EAAA,EAAD,CACEC,YAAU,EACVC,UAAWO,EAAyBxB,OACpCkB,KAAMM,EACNL,QAAS,CACP,CAAEC,OAAQ,eAAgBC,SAAU,cACpC,CAAED,OAAQ,kBAAmBC,SAAU,WACvC,CAAED,OAAQ,iBAAkBC,SAAU,yBAGxC,gBAACN,EAAA,QAAD,MACA,gBAACA,EAAA,aAAD,CAAsBO,QAAQ,iBAM9BG,EAAkB,kBACtB,uBAAKX,UAAU,aACZV,OAAOC,KAAKJ,GAAiByB,OAAOC,KAAI,SAAAlB,GAAI,OAC3C,gBAACc,EAAD,CACEK,IAAKnB,EACLA,KAAMA,EACNe,yBAA0BvB,EAAgBQ,UAMnC,SAASoB,IACtB,OACE,gBAAC,IAAD,KACE,gBAACC,EAAA,EAAD,CAAWC,KAAK,KAAKjB,UAAU,QAC7B,gBAACkB,EAAA,EAAD,CAAKC,MAAM,mBACX,0BAAQnB,UAAU,QAChB,4CACA,qDAEF,gBAACoB,EAAA,GAAD,CAAMC,iBAAiB,WAAWC,GAAG,4BACnC,gBAACC,EAAA,EAAD,CAAKC,SAAS,WAAWL,MAAM,YAC7B,gBAACpB,EAAD,OAEF,gBAACwB,EAAA,EAAD,CAAKC,SAAS,aAAaL,MAAM,cAC/B,gBAACR,EAAD","file":"component---src-pages-insights-jsx-2663739f89bb39d0594a.js","sourcesContent":["import React from 'react';\nimport {\n  DataTable, Tabs, Tab, Container,\n} from '~paragon-react'; // eslint-disable-line\nimport SEO from '../components/SEO';\nimport Layout from '../components/PageLayout';\nimport dependentProjectsUsages from '../../../dependent-usage.json';\n\nconst dependentProjects = dependentProjectsUsages.map(dependentUsage => ({\n  ...dependentUsage,\n  count: dependentUsage.usages.length,\n}));\n\nconst componentsUsage = dependentProjectsUsages.reduce((accumulator, project) => {\n  Object.keys(project.usages).forEach(componentName => {\n    if (!accumulator[componentName]) {\n      accumulator[componentName] = [];\n    }\n    accumulator[componentName] = accumulator[componentName].concat({\n      name: project.name,\n      folderName: project.folderName,\n      version: project.version,\n      componentUsageCount: project.usages[componentName].length,\n    });\n  });\n  return accumulator;\n}, {});\n\n// Paragon version in all projects\nconst ProjectsUsage = () => (\n  <div className=\"pt-5 mb-5\">\n    <h3 className=\"mb-4\">Projects in Open edX consuming Paragon</h3>\n    <DataTable\n      isSortable\n      itemCount={dependentProjects.length}\n      data={dependentProjects}\n      columns={[\n        { Header: 'Project Name', accessor: 'folderName' },\n        { Header: 'Paragon Version', accessor: 'version' },\n      ]}\n    >\n      <DataTable.TableControlBar />\n      <DataTable.Table />\n      <DataTable.EmptyTable content=\"No projects\" />\n      <DataTable.TableFooter />\n    </DataTable>\n  </div>\n);\n\n// Usage info about a single component\n// eslint-disable-next-line\nconst ComponentUsage = ({ name, componentUsageInProjects }) => (\n  <div className=\"mb-5\">\n    <h3 className=\"mb-4\">{name}</h3>\n    <DataTable\n      isSortable\n      itemCount={componentUsageInProjects.length} // eslint-disable-line\n      data={componentUsageInProjects}\n      columns={[\n        { Header: 'Project Name', accessor: 'folderName' },\n        { Header: 'Paragon Version', accessor: 'version' },\n        { Header: 'Instance count', accessor: 'componentUsageCount' },\n      ]}\n    >\n      <DataTable.Table />\n      <DataTable.EmptyTable content=\"No usages\" />\n    </DataTable>\n  </div>\n);\n\n// Usage info for all components\nconst ComponentsUsage = () => (\n  <div className=\"pt-5 mb-5\">\n    {Object.keys(componentsUsage).sort().map(name => (\n      <ComponentUsage\n        key={name}\n        name={name}\n        componentUsageInProjects={componentsUsage[name]}\n      />\n    ))}\n  </div>\n);\n\nexport default function InsightsPage() {\n  return (\n    <Layout>\n      <Container size=\"md\" className=\"py-5\">\n        <SEO title=\"Usage Insights\" />\n        <header className=\"mb-5\">\n          <h1>Usage Insights</h1>\n          <p>Last updated: 4-30-2021</p>\n        </header>\n        <Tabs defaultActiveKey=\"projects\" id=\"uncontrolled-tab-example\">\n          <Tab eventKey=\"projects\" title=\"Projects\">\n            <ProjectsUsage />\n          </Tab>\n          <Tab eventKey=\"components\" title=\"Components\">\n            <ComponentsUsage />\n          </Tab>\n        </Tabs>\n      </Container>\n    </Layout>\n  );\n}\n"],"sourceRoot":""}