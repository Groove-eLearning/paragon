{"version":3,"sources":["webpack://paragon-pattern-library-documentation/./node_modules/gatsby-plugin-mdx/index.js","webpack://paragon-pattern-library-documentation/./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack://paragon-pattern-library-documentation/./src/components/PropType.jsx","webpack://paragon-pattern-library-documentation/./src/components/PropsTable.jsx","webpack://paragon-pattern-library-documentation/./src/templates/component-page-template.jsx"],"names":["MDXRenderer","require","module","React","mdx","useMDXScope","scope","children","props","mdxScope","End","fullScope","keys","Object","values","key","fn","RequiredBadge","isRequired","Badge","variant","defaultProps","SimplePropType","name","PropTypeEnum","enumValue","value","className","map","join","JSON","stringify","PropTypeUnion","propType","PropType","reduce","prev","curr","PropTypeInstanceOf","PropTypeArrayOf","PropTypeObjectOf","PropTypeShape","entries","PropTypeExact","CustomPropType","raw","PROP_TYPE_COMPONENTS","array","bool","func","number","object","string","any","element","node","symbol","elementType","enum","union","instanceOf","arrayOf","objectOf","shape","exact","custom","required","PropTypeComponent","DefaultValue","undefined","Prop","type","defaultValue","description","childMdx","body","PropsTable","componentProps","displayName","content","Card","id","as","metadata","PageTemplate","data","components","nodes","acc","currentValue","shortcodes","pre","code","CodeBlock","Link","sortedComponentNames","frontmatter","isDeprecated","status","toLowerCase","includes","title","size","notes","MDXProvider","componentName"],"mappings":"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","file":"component---src-templates-component-page-template-jsx-26e45da8201d99e733da.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Badge } from '~paragon-react'; // eslint-disable-line\n\nconst RequiredBadge = ({ isRequired }) => {\n  if (!isRequired) { return null; }\n  return (\n    <>\n      {' '}\n      <Badge variant=\"light\">Required</Badge>\n    </>\n  );\n};\n\nRequiredBadge.propTypes = {\n  isRequired: PropTypes.bool,\n};\n\nRequiredBadge.defaultProps = {\n  isRequired: false,\n};\n\nconst SimplePropType = ({ name, isRequired }) => (\n  <span>\n    <code>{name}</code>\n    <RequiredBadge isRequired={isRequired} />\n  </span>\n);\n\nSimplePropType.propTypes = {\n  isRequired: PropTypes.bool,\n  name: PropTypes.string.isRequired,\n};\n\nSimplePropType.defaultProps = {\n  isRequired: false,\n};\n\nconst PropTypeEnum = ({ name, value: enumValue, isRequired }) => (\n  <span>\n    <code>{name}</code>\n    <RequiredBadge isRequired={isRequired} />\n    <span className=\"text-monospace small ml-2\">\n      {enumValue.map\n        ? enumValue.map(({ value }) => value).join(' | ')\n        : JSON.stringify(enumValue)}\n    </span>\n  </span>\n);\n\nPropTypeEnum.propTypes = {\n  isRequired: PropTypes.bool,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.array.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nPropTypeEnum.defaultProps = {\n  isRequired: false,\n};\n\nconst PropTypeUnion = ({ value, isRequired }) => (\n  <span>\n    {value\n      .map(propType => <PropType key={propType.name} {...propType} />)\n      .reduce((prev, curr) => [prev, ' | ', curr])}\n    <RequiredBadge isRequired={isRequired} />\n  </span>\n);\n\nPropTypeUnion.propTypes = {\n  isRequired: PropTypes.bool,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.array.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nPropTypeUnion.defaultProps = {\n  isRequired: false,\n};\n\nconst PropTypeInstanceOf = ({ value, isRequired }) => (\n  <span>\n    <code>{value}</code>\n    <RequiredBadge isRequired={isRequired} />\n  </span>\n);\n\nPropTypeInstanceOf.propTypes = {\n  isRequired: PropTypes.bool,\n  value: PropTypes.string.isRequired,\n};\n\nPropTypeInstanceOf.defaultProps = {\n  isRequired: false,\n};\n\nconst PropTypeArrayOf = ({ value, isRequired }) => (\n  <span>\n    <PropType {...value} />\n    <code>[]</code>\n    <RequiredBadge isRequired={isRequired} />\n  </span>\n);\n\nPropTypeArrayOf.propTypes = {\n  isRequired: PropTypes.bool,\n  value: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nPropTypeArrayOf.defaultProps = {\n  isRequired: false,\n};\n\nconst PropTypeObjectOf = ({ value, isRequired }) => (\n  <span>\n    <code>\n      Object.{'<'}\n      <PropType {...value} />\n      {'>'}\n    </code>\n    <RequiredBadge isRequired={isRequired} />\n  </span>\n);\n\nPropTypeObjectOf.propTypes = {\n  isRequired: PropTypes.bool,\n  value: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nPropTypeObjectOf.defaultProps = {\n  isRequired: false,\n};\n\nconst PropTypeShape = ({ name, value, isRequired }) => (\n  <span className=\"small\">\n    <code>{name}</code>\n    <RequiredBadge isRequired={isRequired} />\n    {' {'}\n    {Object.entries(value).map(([key, propType]) => (\n      <div className=\"text-monospace pl-3\" key={key}>\n        {key}: <PropType {...propType} />,\n      </div>\n    ))}\n    {'}'}\n  </span>\n);\n\nPropTypeShape.propTypes = {\n  isRequired: PropTypes.bool,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nPropTypeShape.defaultProps = {\n  isRequired: false,\n};\n\nconst PropTypeExact = ({ name, value, isRequired }) => (\n  <span className=\"small\">\n    <code>{name}</code>\n    <RequiredBadge isRequired={isRequired} />\n    {' {'}\n    {Object.entries(value).map(([key, propType]) => (\n      <div className=\"text-monospace pl-3\">\n        {key}: <PropType {...propType} />,\n      </div>\n    ))}\n    {'}'}\n  </span>\n);\n\nPropTypeExact.propTypes = {\n  isRequired: PropTypes.bool,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nPropTypeExact.defaultProps = {\n  isRequired: false,\n};\n\nconst CustomPropType = ({ raw, isRequired }) => (\n  <span>\n    <code>{raw}</code>\n    <RequiredBadge isRequired={isRequired} />\n  </span>\n);\n\nCustomPropType.propTypes = {\n  isRequired: PropTypes.bool,\n  raw: PropTypes.string,\n};\n\nCustomPropType.defaultProps = {\n  isRequired: false,\n  raw: '',\n};\n\nconst PROP_TYPE_COMPONENTS = {\n  array: SimplePropType,\n  bool: SimplePropType,\n  func: SimplePropType,\n  number: SimplePropType,\n  object: SimplePropType,\n  string: SimplePropType,\n  any: SimplePropType,\n  element: SimplePropType,\n  node: SimplePropType,\n  symbol: SimplePropType,\n  elementType: SimplePropType,\n  enum: PropTypeEnum,\n  union: PropTypeUnion,\n  instanceOf: PropTypeInstanceOf,\n  arrayOf: PropTypeArrayOf,\n  objectOf: PropTypeObjectOf,\n  shape: PropTypeShape,\n  exact: PropTypeExact,\n  custom: CustomPropType,\n};\n\nconst PropType = ({\n  name, value, required, raw,\n}) => {\n  const PropTypeComponent = PROP_TYPE_COMPONENTS[name];\n\n  if (PropTypeComponent) {\n    return (\n      <PropTypeComponent\n        value={value}\n        name={name}\n        isRequired={required}\n        raw={raw}\n      />\n    );\n  }\n\n  return 'unknown type';\n};\n\nPropType.propTypes = {\n  name: PropTypes.oneOf([\n    'arrayOf',\n    'custom',\n    'enum',\n    'array',\n    'bool',\n    'func',\n    'number',\n    'object',\n    'string',\n    'any',\n    'element',\n    'node',\n    'symbol',\n    'objectOf',\n    'shape',\n    'exact',\n    'union',\n    'elementType',\n  ]),\n  value: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n  raw: PropTypes.string,\n  computed: PropTypes.bool,\n  required: PropTypes.bool,\n};\n\nexport default PropType;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MDXRenderer } from 'gatsby-plugin-mdx';\nimport PropType from './PropType';\nimport { Badge, Card } from '~paragon-react'; // eslint-disable-line\n\nconst DefaultValue = ({ value }) => {\n  if (!value || value === 'undefined') { return null; }\n  return (\n    <>\n      <Badge variant=\"light\">Default</Badge>\n      <span className=\"small text-monospace ml-2\">{value}</span>\n    </>\n  );\n};\n\nDefaultValue.propTypes = {\n  value: PropTypes.string,\n};\n\nDefaultValue.defaultProps = {\n  value: undefined,\n};\n\nconst Prop = ({\n  name, type, required, defaultValue, description,\n}) => (\n  <li className=\"px-4 border-top border-light-300\">\n    <div className=\"my-3\">\n      <div className=\"mb-2\">\n        <h5 className=\"d-inline mb-0 mr-1\">{`${name} `}</h5>\n        <PropType {...type} />\n        {required && (\n          <>\n            {' '}\n            <Badge variant=\"light\">Required</Badge>\n          </>\n        )}\n      </div>\n      <div className=\"x-small\">\n        {description ? (\n          <MDXRenderer>{description.childMdx.body}</MDXRenderer>\n        ) : null}\n      </div>\n\n      <DefaultValue {...defaultValue} />\n    </div>\n  </li>\n);\n\nProp.propTypes = {\n  name: PropTypes.string.isRequired,\n  type: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  required: PropTypes.bool,\n  defaultValue: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  description: PropTypes.shape({\n    childMdx: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  }),\n};\nProp.defaultProps = {\n  required: false,\n  defaultValue: {},\n  description: undefined,\n};\n\nconst PropsTable = ({ props: componentProps, displayName, content }) => (\n  <Card className=\"mb-5\" id={`props-api-table-${displayName}`}>\n    <Card.Body className=\"pb-1\">\n      <Card.Title as=\"h3\">{displayName} Props API</Card.Title>\n      {content && <div className=\"small mb-3\">{content}</div>}\n    </Card.Body>\n    <ul className=\"list-unstyled\">\n      {componentProps.map(metadata => <Prop key={metadata.name} {...metadata} />)}\n    </ul>\n  </Card>\n);\n\nPropsTable.propTypes = {\n  props: PropTypes.arrayOf(PropTypes.object),\n  content: PropTypes.string,\n  displayName: PropTypes.string,\n};\n\nPropsTable.defaultProps = {\n  props: [],\n  content: undefined,\n  displayName: undefined,\n};\n\nexport default PropsTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, Link } from 'gatsby';\nimport { MDXProvider } from '@mdx-js/react';\nimport { MDXRenderer } from 'gatsby-plugin-mdx';\nimport { Container, Alert } from '~paragon-react'; // eslint-disable-line\nimport CodeBlock from '../components/CodeBlock';\nimport GenericPropsTable from '../components/PropsTable';\nimport Layout from '../components/PageLayout';\nimport SEO from '../components/SEO';\n\nexport default function PageTemplate({\n  data: { mdx, components: componentNodes },\n}) {\n  const components = componentNodes.nodes.reduce((acc, currentValue) => {\n    acc[currentValue.displayName] = currentValue;\n    return acc;\n  }, {});\n\n  const shortcodes = React.useMemo(() => {\n    const PropsTable = ({ displayName, ...props }) => { // eslint-disable-line react/prop-types\n      if (components[displayName]) {\n        return <GenericPropsTable {...components[displayName]} {...props} />;\n      }\n      return null;\n    };\n    // Provide common components here\n    return {\n      pre: props => <div {...props} />,\n      code: CodeBlock,\n      Link,\n      PropsTable,\n    };\n  }, [components]);\n\n  const sortedComponentNames = mdx.frontmatter?.components || [];\n\n  const isDeprecated = mdx.frontmatter?.status?.toLowerCase().includes('deprecate') || false;\n\n  return (\n    <Layout>\n      <SEO title={mdx.frontmatter.title} />\n      <Container size=\"md\" className=\"py-5\">\n        {isDeprecated && (\n          <Alert variant=\"warning\">\n            <Alert.Heading>This component will be removed soon.</Alert.Heading>\n            <p className=\"small mb-0\">{mdx.frontmatter.notes}</p>\n          </Alert>\n        )}\n        <h1 className=\"mb-4\">{mdx.frontmatter.title}</h1>\n        <MDXProvider components={shortcodes}>\n          <MDXRenderer>{mdx.body}</MDXRenderer>\n        </MDXProvider>\n        {sortedComponentNames.map(componentName => {\n          const node = components[componentName];\n          if (!node) {\n            return null;\n          }\n          return <GenericPropsTable key={node.displayName} {...node} />\n        })}\n      </Container>\n    </Layout>\n  );\n}\n\nPageTemplate.propTypes = {\n  data: PropTypes.shape({\n    mdx: PropTypes.shape({\n      frontmatter: PropTypes.shape({\n        title: PropTypes.string,\n        status: PropTypes.string,\n      }),\n      body: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n    }),\n    components: PropTypes.objectOf(PropTypes.object), // eslint-disable-line react/forbid-prop-types\n  }).isRequired,\n};\n\nexport const pageQuery = graphql`\n  query ComponentPageQuery($id: String, $components: [String]) {\n    mdx(id: { eq: $id }) {\n      id\n      body\n      frontmatter {\n        title\n        status\n        notes\n        components\n      }\n    }\n    components: allComponentMetadata(\n      filter: { displayName: { in: $components } }\n    ) {\n      nodes {\n        ...ComponentDocGenData\n      }\n    }\n  }\n\n  fragment ComponentDocGenData on ComponentMetadata {\n    displayName\n    props {\n      defaultValue {\n        value\n      }\n      name\n      type {\n        name\n        raw\n        value\n      }\n      required\n      docblock\n      doclets\n      description {\n        id\n        text\n        childMdx {\n          body\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}