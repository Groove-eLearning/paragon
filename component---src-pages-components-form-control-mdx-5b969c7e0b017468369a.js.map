{"version":3,"sources":["webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/defineProperty.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/construct.js","webpack:///./src/components/mdx-layout.jsx","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./src/pages/components/form-control.mdx","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/arrayWithoutHoles.js"],"names":["module","exports","obj","key","value","Object","defineProperty","enumerable","configurable","writable","Reflect","construct","sham","Proxy","Date","prototype","toString","call","e","MDXRenderer","require","setPrototypeOf","isNativeReflectConstruct","_construct","Parent","args","Class","a","push","apply","instance","Function","bind","arguments","components","pre","props","code","CodeBlock","children","renderedChildren","_setPrototypeOf","o","p","__proto__","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","arr","React","useMDXComponents","mdx","useMDXScope","scope","mdxComponents","mdxScope","End","fullScope","keys","values","fn","arrayLikeToArray","minLen","n","slice","constructor","name","Array","from","test","iter","Symbol","iterator","len","length","i","arr2","TypeError","_frontmatter","layoutProps","query","MDXLayout","DefaultLayout","MDXContent","mdxType","frontmatter","pageContext","parentName","data","FormControlMetadata","isMDXComponent","isArray"],"mappings":"+EAeAA,EAAOC,QAfP,SAAyBC,EAAKC,EAAKC,GAYjC,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,I,qBCCTF,EAAOC,QAbP,WACE,GAAuB,oBAAZS,UAA4BA,QAAQC,UAAW,OAAO,EACjE,GAAID,QAAQC,UAAUC,KAAM,OAAO,EACnC,GAAqB,mBAAVC,MAAsB,OAAO,EAExC,IAEE,OADAC,KAAKC,UAAUC,SAASC,KAAKP,QAAQC,UAAUG,KAAM,IAAI,iBAClD,EACP,MAAOI,GACP,OAAO,K,uBCHX,IAAMC,EAAcC,EAApB,QAEApB,UAAiB,CACfmB,YAAaA,I,qBCTf,IAAIE,EAAiB,EAAQ,QAEzBC,EAA2B,EAAQ,QAEvC,SAASC,EAAWC,EAAQC,EAAMC,GAchC,OAbIJ,IACFtB,EAAOC,QAAUsB,EAAab,QAAQC,UAEtCX,EAAOC,QAAUsB,EAAa,SAAoBC,EAAQC,EAAMC,GAC9D,IAAIC,EAAI,CAAC,MACTA,EAAEC,KAAKC,MAAMF,EAAGF,GAChB,IACIK,EAAW,IADGC,SAASC,KAAKH,MAAML,EAAQG,IAG9C,OADID,GAAOL,EAAeS,EAAUJ,EAAMX,WACnCe,GAIJP,EAAWM,MAAM,KAAMI,WAGhCjC,EAAOC,QAAUsB,G,kCCrBjB,6DAQMW,GARN,UAQmB,CACjBC,IAAK,SAAAC,GAAK,OAAI,wBAASA,IACvBC,KAAMC,MAGKnB,EAAc,SAAC,GAAkB,IAAhBoB,EAAe,EAAfA,SACxBC,EAAmBD,EAMvB,MAJgC,iBAArBC,IACTA,EAAmB,kBAAC,cAAD,KAAsBD,IAIzC,kBAAC,cAAD,CACEL,WAAYA,GAEXM,IASQ,aAAAJ,GAAK,OAClB,6BACE,kBAACjB,EAAD,KAAciB,EAAMG,a,mBCnCxB,SAASE,EAAgBC,EAAGC,GAM1B,OALA3C,EAAOC,QAAUwC,EAAkBpC,OAAOgB,gBAAkB,SAAyBqB,EAAGC,GAEtF,OADAD,EAAEE,UAAYD,EACPD,GAGFD,EAAgBC,EAAGC,GAG5B3C,EAAOC,QAAUwC,G,qBCTjB,IAAII,EAAoB,EAAQ,QAE5BC,EAAkB,EAAQ,QAE1BC,EAA6B,EAAQ,QAErCC,EAAoB,EAAQ,QAMhChD,EAAOC,QAJP,SAA4BgD,GAC1B,OAAOJ,EAAkBI,IAAQH,EAAgBG,IAAQF,EAA2BE,IAAQD,M,woBCT9F,IAAME,EAAQ9B,EAAd,Q,EACkCA,EAAQ,QAAlC+B,E,EAAAA,iBAAkBC,E,EAAAA,IAClBC,EAAgBjC,EAAQ,QAAxBiC,YAERrD,UAAiB,SAAqB,GAKlC,IAJFsD,EAIC,EAJDA,MACApB,EAGC,EAHDA,WACAK,EAEC,EAFDA,SACGH,EACF,uCACKmB,EAAgBJ,EAAtB,GACMK,EAAWH,EAFhB,GAKKI,EAAMP,EAAA,SAAc,WACxB,MACE,OAAO,KAGT,IAAMQ,EAAS,GAGbR,MAHa,EAIbE,OAJF,GAQMO,EAAOtD,YAAb,GACMuD,EAASD,EAAA,KAAS,SAAAxD,GAAG,OAAIuD,EAAJ,MAG3B,OAFQ,mCAAR,KAEOG,2BAAP,OACC,CAACtB,EAlBJ,IAoBA,OAAOW,EAAA,mBAA2BhB,WAAYqB,GAA9C,M,qBClCF,IAAIO,EAAmB,EAAQ,QAW/B9D,EAAOC,QATP,SAAqCyC,EAAGqB,GACtC,GAAKrB,EAAL,CACA,GAAiB,iBAANA,EAAgB,OAAOoB,EAAiBpB,EAAGqB,GACtD,IAAIC,EAAI3D,OAAOU,UAAUC,SAASC,KAAKyB,GAAGuB,MAAM,GAAI,GAEpD,MADU,WAAND,GAAkBtB,EAAEwB,cAAaF,EAAItB,EAAEwB,YAAYC,MAC7C,QAANH,GAAqB,QAANA,EAAoBI,MAAMC,KAAK3B,GACxC,cAANsB,GAAqB,2CAA2CM,KAAKN,GAAWF,EAAiBpB,EAAGqB,QAAxG,K,mBCJF/D,EAAOC,QAJP,SAA0BsE,GACxB,GAAsB,oBAAXC,QAA0BA,OAAOC,YAAYpE,OAAOkE,GAAO,OAAOH,MAAMC,KAAKE,K,mBCS1FvE,EAAOC,QAVP,SAA2BgD,EAAKyB,IACnB,MAAPA,GAAeA,EAAMzB,EAAI0B,UAAQD,EAAMzB,EAAI0B,QAE/C,IAAK,IAAIC,EAAI,EAAGC,EAAO,IAAIT,MAAMM,GAAME,EAAIF,EAAKE,IAC9CC,EAAKD,GAAK3B,EAAI2B,GAGhB,OAAOC,I,mBCHT7E,EAAOC,QAJP,WACE,MAAM,IAAI6E,UAAU,0I,0MCcTC,EAAe,GACtBC,EAAc,CAClBC,MATmB,aAUnBF,gBAEIG,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDlD,EAEC,EAFDA,WACGE,EACF,8BACD,OAAO,cAAC8C,EAAD,iBAAeF,EAAiB5C,EAAhC,CAAuCF,WAAYA,EAAYmD,QAAQ,cAI5E,wCACA,cAAC,IAAD,CAAuBC,YAAalD,SAAF,UAAEA,EAAOmD,mBAAT,aAAE,EAAoBD,YAAaD,QAAQ,0BAC7E,yEAAsD,4BAAYG,WAAW,KAAvB,SAAtD,OAA+G,4BAAYA,WAAW,KAAvB,UAA/G,yFAEA,4EAAyD,4BAAYA,WAAW,KAAvB,cAAzD,SAAyH,4BAAYA,WAAW,KAAvB,cAAzH,mHAGA,0HACmB,4BAAYA,WAAW,KAAvB,SADnB,yDAEF,iCAAGA,WAAW,KAAQ,CAChB,KAAQ,+EADd,oBAFE,QAKC,iCAAGA,WAAW,KAAQ,CACnB,KAAQ,gFADX,qBALD,KAQA,oEACA,yBAAK,oCAAMA,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,OACd,MAAQ,IAHP,sXAmBL,uCACA,yBAAK,oCAAMA,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,OACd,MAAQ,IAHP,+pEAuFL,sCACA,yBAAK,oCAAMA,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,OACd,MAAQ,IAHP,koBA2BL,cAAC,IAAD,iBAAgBpD,EAAMqD,KAAKC,oBAA3B,CAAgDL,QAAQ,iBAM5DD,EAAWO,gBAAiB,G,qBC1L5B,IAAI7B,EAAmB,EAAQ,QAM/B9D,EAAOC,QAJP,SAA4BgD,GAC1B,GAAImB,MAAMwB,QAAQ3C,GAAM,OAAOa,EAAiBb","file":"component---src-pages-components-form-control-mdx-5b969c7e0b017468369a.js","sourcesContent":["function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MDXRenderer as InternalMDXRenderer } from \"gatsby-plugin-mdx\";\nimport { MDXProvider } from '@mdx-js/react';\nimport CodeBlock from './CodeBlock';\n\nimport '../scss/index.scss';\n\nconst components = {\n  pre: props => <div {...props} />,\n  code: CodeBlock,\n};\n\nexport const MDXRenderer = ({ children }) => {\n  let renderedChildren = children;\n\n  if (typeof renderedChildren === 'string') {\n    renderedChildren = <InternalMDXRenderer>{children}</InternalMDXRenderer>;\n  }\n\n  return (\n    <MDXProvider\n      components={components}\n    >\n      {renderedChildren}\n    </MDXProvider>\n  );\n};\n\nMDXRenderer.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.node]).isRequired,\n};\n\nexport default props => (\n  <div>\n    <MDXRenderer>{props.children}</MDXRenderer>{/* eslint-disable-line react/prop-types */}\n  </div>\n);\n","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/paragon/paragon/www/src/components/mdx-layout.jsx\";\nimport SingleComponentStatus from '../../components/SingleComponentStatus';\nimport PropsTable from '../../components/PropsTable';\nexport const query = graphql`\n  query {\n    FormControlMetadata: componentMetadata(displayName: { eq: \"FormControl\" }) {\n      ...ComponentDocGenData\n    }\n  }\n`;\nexport const _frontmatter = {};\nconst layoutProps = {\n  query,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1>{`Form.Control`}</h1>\n    <SingleComponentStatus frontmatter={props?.pageContext?.frontmatter} mdxType=\"SingleComponentStatus\" />\n    <p>{`A form control renders a space for user input (`}<inlineCode parentName=\"p\">{`input`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`select`}</inlineCode>{`). It can be\ndecorated with leading or trailing elements, and have a floating label.`}</p>\n    <p>{`Prefer to use the Form.Control component inside a `}<inlineCode parentName=\"p\">{`Form.Group`}</inlineCode>{`. The `}<inlineCode parentName=\"p\">{`Form.Group`}</inlineCode>{`\nprovides a context for the control to ensure accessibility requirements for\nlabels and descriptions are met.`}</p>\n    <p>{`Note: extra props added to this component are passed as attributes to the\nunderlying DOM node (`}<inlineCode parentName=\"p\">{`input`}</inlineCode>{` by default). See MDN for documentation on available\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attributes\"\n      }}>{`input attributes`}</a>{`\nor `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#attributes\"\n      }}>{`select attributes`}</a>{`.`}</p>\n    <h3>{`Usage with decorators and floating label`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live\",\n        \"live\": true\n      }}>{`() => {\n  const [value, setValue] = useState('');\n  return (\n    <Form.Group>\n      <Form.Control\n        leadingElement={<Icon src={FavoriteBorder} />}\n        trailingElement={<Icon src={Verified} />}\n        floatingLabel=\"What kind of cats?\"\n        value={value}\n        onChange={(e) => setValue(e.target.value)}\n      />\n    </Form.Group>\n  );\n}\n`}</code></pre>\n    <h3>{`Input types`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live\",\n        \"live\": true\n      }}>{`() => {\n  const [value, setValue] = useState('');\n  const handleChange = (e) => setValue(e.target.value);\n  return (\n    <>\n      <Form.Group>\n        <Form.Control\n          value={value}\n          onChange={handleChange}\n          leadingElement={<Icon src={FavoriteBorder} />}\n          floatingLabel=\"What kind of cats?\"\n        />\n      </Form.Group>\n\n      <Form.Group>\n        <Form.Control\n          as=\"textarea\"\n          value={value}\n          onChange={handleChange}\n          leadingElement={<Icon src={FavoriteBorder} />}\n          floatingLabel=\"What kind of cats?\"\n        />\n      </Form.Group>\n\n      <Form.Group>\n        <Form.Control\n          as=\"select\"\n          value={value}\n          onChange={handleChange}\n          leadingElement={<Icon src={FavoriteBorder} />}\n          floatingLabel=\"What kind of cats?\"\n        >\n          <option value=\"\">Select a cat</option>\n          <option>Persian cat</option>\n          <option>British Shorthair</option>\n          <option>Maine Coon</option>\n          <option>Siamese cat</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group>\n        <Form.Control\n          type=\"password\"\n          value={value}\n          onChange={handleChange}\n          leadingElement={<Icon src={FavoriteBorder} />}\n          floatingLabel=\"Password cats?\"\n        />\n      </Form.Group>\n\n      <Form.Group>\n        <Form.Control\n          type=\"date\"\n          value={value}\n          onChange={handleChange}\n          leadingElement={<Icon src={FavoriteBorder} />}\n          floatingLabel=\"When cats?\"\n        />\n      </Form.Group>\n\n      <Form.Group>\n        <Form.Control\n          type=\"number\"\n          value={value}\n          onChange={handleChange}\n          leadingElement={<Icon src={FavoriteBorder} />}\n          floatingLabel=\"How many cats?\"\n        />\n      </Form.Group>\n\n      <Form.Group>\n        <Form.Control\n          type=\"time\"\n          value={value}\n          onChange={handleChange}\n          leadingElement={<Icon src={FavoriteBorder} />}\n          floatingLabel=\"Time cats?\"\n        />\n      </Form.Group>\n    </>\n  );\n}\n`}</code></pre>\n    <h3>{`Validation`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live\",\n        \"live\": true\n      }}>{`() => {\n  const [value, setValue] = useState('');\n  const handleChange = (e) => setValue(e.target.value);\n  return (\n    <>\n      <Form.Group>\n        <FormLabel>What kind of cats?</FormLabel>\n        <Form.Control value={value} onChange={handleChange} />\n      </Form.Group>\n\n      <Form.Group isInvalid>\n        <FormLabel>What kind of cats?</FormLabel>\n        <Form.Control value={value} onChange={handleChange} />\n      </Form.Group>\n\n      <Form.Group isValid>\n        <FormLabel>What kind of cats?</FormLabel>\n        <Form.Control value={value} onChange={handleChange} />\n      </Form.Group>\n    </>\n  );\n}\n`}</code></pre>\n    <PropsTable {...props.data.FormControlMetadata} mdxType=\"PropsTable\" />\n\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;"],"sourceRoot":""}