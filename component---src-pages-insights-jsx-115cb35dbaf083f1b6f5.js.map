{"version":3,"sources":["webpack://paragon-pattern-library-documentation/./src/components/insights/SummaryComponentNameWithUsageModal.jsx","webpack://paragon-pattern-library-documentation/./src/components/insights/ProjectNameWithUsageModal.jsx","webpack://paragon-pattern-library-documentation/./src/components/insights/ProjectNameWithComponentUsageModal.jsx","webpack://paragon-pattern-library-documentation/./src/utils/getGithubProjectUrl.js","webpack://paragon-pattern-library-documentation/./src/pages/insights.jsx"],"names":["row","useToggle","isOpen","open","close","componentName","original","name","componentUsages","usages","Button","variant","className","onClick","StandardModal","size","title","hasCloseButton","onClose","footerNode","map","projectName","projectUsages","repositoryUrl","key","filePath","line","Hyperlink","destination","target","folderName","Object","keys","length","entries","repository","url","parts","split","githubDomainIndex","findIndex","part","splice","join","replace","analysisLastUpdated","dependentProjectsAnalysis","dependentProjectsUsages","dependentProjects","dependentUsage","getGithubProjectUrl","count","values","reduce","accumulator","usage","componentsUsage","project","forEach","concat","version","componentUsageCount","summaryComponentsUsage","SummaryUsage","n","summaryTableData","sort","a","b","nameA","toUpperCase","nameB","averageComponentsUsedPerProject","Math","round","DataTable","isSortable","itemCount","data","columns","Header","accessor","Cell","SummaryComponentNameWithUsageModal","content","ProjectsUsage","ProjectNameWithUsageModal","ComponentUsage","componentUsageInProjects","props","ComponentsUsage","InsightsPage","Container","SEO","Date","toLocaleDateString","Tabs","defaultActiveKey","id","Tab","eventKey"],"mappings":"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","file":"component---src-pages-insights-jsx-115cb35dbaf083f1b6f5.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  StandardModal,\n  Hyperlink,\n  useToggle,\n} from '~paragon-react';\n\nconst SummaryComponentNameWithUsageModal = ({ row }) => {\n  const [isOpen, open, close] = useToggle(false);\n  const componentName = row.original.name;\n  const componentUsages = row.original.usages;\n  return (\n    <>\n      <Button\n        variant=\"link\"\n        className=\"p-0 text-left\"\n        onClick={isOpen ? close : open}\n      >\n        {componentName}\n      </Button>\n      <StandardModal\n        size=\"xl\"\n        title={componentName}\n        isOpen={isOpen}\n        hasCloseButton={false}\n        onClose={close}\n        footerNode={(\n          <Button variant=\"primary\" onClick={close}>OK</Button>\n        )}\n      >\n        {componentUsages.map(({\n          name: projectName,\n          usages: projectUsages,\n          repositoryUrl,\n        }) => (\n          <div className=\"pgn-doc__summary-usages__project mb-4\" key={projectName}>\n            <h4 className=\"font-weight-bold\">{projectName}</h4>\n            <ul className=\"list-unstyled\">\n              {projectUsages.map(({\n                filePath,\n                line,\n              }) => (\n                <li key={`${filePath}L#${line}`}>\n                  {repositoryUrl ? (\n                    <>\n                      <Hyperlink\n                        destination={`${repositoryUrl}/${filePath}#L${line}`}\n                        target=\"_blank\"\n                      >\n                        {filePath}\n                      </Hyperlink>\n                      {' '}(line {line})\n                    </>\n                  ) : (\n                    <>{filePath} (line {line})</>\n                  )}\n                </li>\n              ))}\n            </ul>\n          </div>\n        ))}\n      </StandardModal>\n    </>\n  );\n};\n\nSummaryComponentNameWithUsageModal.propTypes = {\n  row: PropTypes.shape({\n    original: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      repositoryUrl: PropTypes.string,\n      usages: PropTypes.arrayOf(PropTypes.shape({\n        filePath: PropTypes.string.isRequired,\n        line: PropTypes.number.isRequired,\n      })).isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default SummaryComponentNameWithUsageModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  StandardModal,\n  Hyperlink,\n  useToggle,\n} from '~paragon-react';\n\nconst ProjectNameWithUsageModal = ({ row }) => {\n  const [isOpen, open, close] = useToggle(false);\n  const projectName = row.original.folderName;\n  const componentUsages = row.original.usages;\n  const repositoryUrl = row.original.repositoryUrl;\n  return (\n    <>\n      <Button\n        variant=\"link\"\n        className=\"p-0 text-left\"\n        onClick={isOpen ? close : open}\n      >\n        {projectName}\n      </Button>\n      <StandardModal\n        size=\"xl\"\n        title={projectName}\n        isOpen={isOpen}\n        hasCloseButton={false}\n        onClose={close}\n        footerNode={(\n          <Button variant=\"primary\" onClick={close}>OK</Button>\n        )}\n      >\n        {Object.keys(componentUsages).length === 0 && (\n          <p>This project does not import any Paragon components, but may still use its SCSS styles.</p>\n        )}\n        {Object.entries(componentUsages).map(([componentName, componentUsages]) => (\n          <div className=\"pgn-doc__usages-modal mb-4\" key={componentName}>\n            <h4 className=\"font-weight-bold\">{componentName}</h4>\n            <ul className=\"list-unstyled\">\n              {componentUsages.map(({\n                filePath,\n                line,\n              }) => (\n                <li key={`${filePath}L#${line}`}>\n                  {repositoryUrl ? (\n                    <>\n                      <Hyperlink\n                        destination={`${repositoryUrl}/${filePath}#L${line}`}\n                        target=\"_blank\"\n                      >\n                        {filePath}\n                      </Hyperlink>\n                      {' '}(line {line})\n                    </>\n                  ) : (\n                    <>{filePath} (line {line})</>\n                  )}\n                </li>\n              ))}\n            </ul>\n          </div>\n        ))}\n      </StandardModal>\n    </>\n  );\n};\n\nProjectNameWithUsageModal.propTypes = {\n  row: PropTypes.shape({\n    original: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      repositoryUrl: PropTypes.string,\n      usages: PropTypes.arrayOf(PropTypes.shape({\n        filePath: PropTypes.string.isRequired,\n        line: PropTypes.number.isRequired,\n      })).isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default ProjectNameWithUsageModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  StandardModal,\n  Hyperlink,\n  useToggle,\n} from '~paragon-react';\n\nconst ProjectNameWithComponentUsageModal = ({ componentName, row }) => {\n  const [isOpen, open, close] = useToggle(false);\n  const projectName = row.original.folderName;\n  const repositoryUrl = row.original.repositoryUrl;\n  const projectUsages = row.original.usages;\n  return (\n    <>\n      <Button\n        variant=\"link\"\n        className=\"p-0 text-left\"\n        onClick={isOpen ? close : open}\n      >\n        {projectName}\n      </Button>\n      <StandardModal\n        size=\"xl\"\n        title={`${componentName} in ${projectName}`}\n        isOpen={isOpen}\n        hasCloseButton={false}\n        onClose={close}\n        footerNode={(\n          <Button variant=\"primary\" onClick={close}>OK</Button>\n        )}\n      >\n        <div className=\"pgn-doc__component-usage__project\">\n          <ul className=\"list-unstyled\">\n            {projectUsages.map(({\n              filePath,\n              line,\n            }) => (\n              <li key={`${filePath}#L${line}`}>\n                {repositoryUrl ? (\n                  <>\n                    <Hyperlink\n                      destination={`${repositoryUrl}/${filePath}#L${line}`}\n                      target=\"_blank\"\n                    >\n                      {filePath}\n                    </Hyperlink>\n                    {' '}(line {line})\n                  </>\n                ) : (\n                  <>{filePath} (line {line})</>\n                )}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </StandardModal>\n    </>\n  );\n};\n\nProjectNameWithComponentUsageModal.propTypes = {\n  componentName: PropTypes.string.isRequired,\n  row: PropTypes.shape({\n    original: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      repositoryUrl: PropTypes.string,\n      usages: PropTypes.arrayOf(PropTypes.shape({\n        filePath: PropTypes.string.isRequired,\n        line: PropTypes.number.isRequired,\n      })).isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default ProjectNameWithComponentUsageModal;\n","const getGithubProjectUrl = (repository) => {\n  let repositoryUrl;\n  if (repository === Object(repository) && repository.url) {\n    repositoryUrl = repository.url;\n  } else if (typeof repository === 'string') {\n    repositoryUrl = repository;\n  } else {\n    // unsupported repository field\n    return;\n  }\n  const parts = repositoryUrl.split('/');\n  const githubDomainIndex = parts.findIndex(part => part === 'github.com');\n  parts.splice(0, githubDomainIndex);\n  const parsedRepositoryUrl = parts.join('/').replace('.git', '');\n  return `https://${parsedRepositoryUrl}/blob/master`;\n};\n\nexport default getGithubProjectUrl;\n","import React from 'react';\nimport {\n  DataTable,\n  Tabs,\n  Tab,\n  Container,\n} from '~paragon-react'; // eslint-disable-line\nimport SEO from '../components/SEO';\nimport Layout from '../components/PageLayout';\nimport SummaryComponentNameWithUsageModal from '../components/insights/SummaryComponentNameWithUsageModal';\nimport ProjectNameWithUsageModal from '../components/insights/ProjectNameWithUsageModal';\nimport ProjectNameWithComponentUsageModal from '../components/insights/ProjectNameWithComponentUsageModal';\nimport getGithubProjectUrl from '../utils/getGithubProjectUrl';\nimport dependentProjectsAnalysis from '../../../dependent-usage.json';\n\nconst {\n  lastModified: analysisLastUpdated,\n  projectUsages: dependentProjectsUsages,\n} = dependentProjectsAnalysis;\n\nconst dependentProjects = dependentProjectsUsages.map(dependentUsage => ({\n  ...dependentUsage,\n  repositoryUrl: getGithubProjectUrl(dependentUsage.repository),\n  count: Object.values(dependentUsage.usages).reduce((accumulator, usage) => accumulator += usage.length, 0),\n}));\n\nconst componentsUsage = dependentProjectsUsages.reduce((accumulator, project) => {\n  Object.keys(project.usages).forEach(componentName => {\n    if (!accumulator[componentName]) {\n      accumulator[componentName] = [];\n    }\n    accumulator[componentName] = accumulator[componentName].concat({\n      name: project.name,\n      folderName: project.folderName,\n      version: project.version,\n      repositoryUrl: getGithubProjectUrl(project.repository),\n      componentUsageCount: project.usages[componentName].length,\n      usages: project.usages[componentName],\n    });\n  });\n  return accumulator;\n}, {});\n\nconst summaryComponentsUsage = Object.entries(componentsUsage).map(([componentName, usages]) => {\n  const componentUsageCounts = usages.reduce((accumulator, project) => accumulator += project.componentUsageCount, 0);\n  return {\n    name: componentName,\n    count: componentUsageCounts,\n    usages: componentsUsage[componentName],\n  };\n});\n\nconst SummaryUsage = () => {\n  const summaryTableData = summaryComponentsUsage.sort((a, b) => {\n    const nameA = a.name.toUpperCase();\n    const nameB = b.name.toUpperCase();\n    return (nameA < nameB) ? -1 : (nameA > nameB) ? 1 : 0;\n  });\n  const round = (n) => Math.round(n * 10) / 10;\n  const averageComponentsUsedPerProject = dependentProjects.reduce((accumulator, project) => accumulator += project.count, 0) / dependentProjects.length;\n  return (\n    <div className=\"pt-5 mb-5\">\n      <div className=\"mb-5\">\n        <h3>Overview</h3>\n        <p>\n          Paragon is used by at least <strong>{dependentProjects.length} projects</strong>, with an average\n          of <strong>{round(averageComponentsUsedPerProject)} component instances</strong> per project.\n        </p>\n      </div>\n      <h3>Overall component usage</h3>\n      <DataTable\n        isSortable\n        itemCount={summaryTableData.length}\n        data={summaryTableData}\n        columns={[\n          {\n            Header: 'Component Name',\n            accessor: 'name',\n            Cell: SummaryComponentNameWithUsageModal,\n          },\n          { Header: 'Instance Count', accessor: 'count' },\n        ]}\n      >\n        <DataTable.TableControlBar />\n        <DataTable.Table />\n        <DataTable.EmptyTable content=\"No summary available\" />\n        <DataTable.TableFooter />\n      </DataTable>\n    </div>\n  );\n};\n\n// Paragon version in all projects\nconst ProjectsUsage = () => (\n  <div className=\"pt-5 mb-5\">\n    <h3 className=\"mb-4\">Projects in Open edX consuming Paragon</h3>\n    <DataTable\n      isSortable\n      itemCount={dependentProjects.length}\n      data={dependentProjects}\n      columns={[\n        {\n          Header: 'Project Name',\n          accessor: 'folderName',\n          Cell: ProjectNameWithUsageModal,\n        },\n        { Header: 'Paragon Version', accessor: 'version' },\n        { Header: 'Instance Count', accessor: 'count' },\n      ]}\n    >\n      <DataTable.TableControlBar />\n      <DataTable.Table />\n      <DataTable.EmptyTable content=\"No projects\" />\n      <DataTable.TableFooter />\n    </DataTable>\n  </div>\n);\n\n// Usage info about a single component\nconst ComponentUsage = ({ name, componentUsageInProjects }) => (\n  <div className=\"mb-5\">\n    <h3 className=\"mb-4\">{name}</h3>\n    <DataTable\n      isSortable\n      itemCount={componentUsageInProjects.length} // eslint-disable-line\n      data={componentUsageInProjects}\n      columns={[\n        {\n          Header: 'Project Name',\n          accessor: 'folderName',\n          Cell: (props) => <ProjectNameWithComponentUsageModal {...props} componentName={name} />,\n        },\n        { Header: 'Paragon Version', accessor: 'version' },\n        { Header: 'Instance Count', accessor: 'componentUsageCount' },\n      ]}\n    >\n      <DataTable.Table />\n      <DataTable.EmptyTable content=\"No usages\" />\n    </DataTable>\n  </div>\n);\n\n// Usage info for all components\nconst ComponentsUsage = () => (\n  <div className=\"pt-5 mb-5\">\n    {Object.keys(componentsUsage).sort().map(name => (\n      <ComponentUsage\n        key={name}\n        name={name}\n        componentUsageInProjects={componentsUsage[name]}\n      />\n    ))}\n  </div>\n);\n\nexport default function InsightsPage() {\n  return (\n    <Layout>\n      <Container size=\"md\" className=\"py-5\">\n        <SEO title=\"Usage Insights\" />\n        <header className=\"mb-5\">\n          <h1>Usage Insights</h1>\n          <p>Last updated: {new Date(analysisLastUpdated).toLocaleDateString()}</p>\n        </header>\n        <Tabs defaultActiveKey=\"summary\" id=\"uncontrolled-tab-example\">\n          <Tab eventKey=\"summary\" title=\"Summary\">\n            <SummaryUsage />\n          </Tab>\n          <Tab eventKey=\"projects\" title=\"Projects\">\n            <ProjectsUsage />\n          </Tab>\n          <Tab eventKey=\"components\" title=\"Components\">\n            <ComponentsUsage />\n          </Tab>\n        </Tabs>\n      </Container>\n    </Layout>\n  );\n}\n"],"sourceRoot":""}