{"version":3,"sources":["webpack://paragon-pattern-library-documentation/./src/pages/foundations/css-utilities.mdx","webpack://paragon-pattern-library-documentation/./src/components/CSSUtilitiesTable.jsx","webpack://paragon-pattern-library-documentation/./src/templates/default-mdx-page-template.jsx","webpack://paragon-pattern-library-documentation/./src/utils/getCssSelectors.js"],"names":["_frontmatter","layoutProps","pageQuery","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","selectors","getCssSelectors","data","utilities","nodes","isMDXComponent","CSSUtilitiesTable","showExample","className","map","selector","declarations","example","style","margin","display","padding","border","declaration","key","columns","label","hideHeader","defaultProps","shortcodes","pre","code","CodeBlock","Link","PageTemplate","children","pageContext","title","frontmatter","size","MDXProvider","regExpStr","regex","RegExp","filter","rule","test"],"mappings":"uTA0BaA,EAAe,GACtBC,EAAc,CAClBC,UAfuB,aAgBvBF,gBAEIG,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,yBACD,OAAO,SAACJ,EAAD,iBAAeF,EAAiBM,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAI5E,qCACA,uCACA,SAAC,IAAD,CAAmBC,WAAWC,OAAgBH,EAAMI,KAAKC,UAAUC,OAAQL,QAAQ,uBAMvFH,EAAWS,gBAAiB,G,4DC5C5B,SAASC,EAAT,GAAwD,IAA3BN,EAA0B,EAA1BA,UAAWO,EAAe,EAAfA,YACtC,OACE,gBAAC,IAAD,CACEC,UAAU,wBACVN,KAAMF,EAAUS,KAAI,gBAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,aAAb,MAAiC,CACnDD,SAAU,gCAAQA,GAClBE,QAASL,EACP,qBACEM,MAAO,CACLC,OAAQ,WACRC,QAAS,eACTC,QAAS,aACTC,OAAQ,yBAEVT,UAAWE,GAPb,YAWE,KACJC,aACE,2BACGA,EAAaF,KAAI,SAAAS,GAAW,OAC3B,wBAAMC,IAAKD,EAAaV,UAAU,mBAC/BU,WAMXE,QAAS,CACP,CACEC,MAAO,qBACPF,IAAK,YAEP,CACEE,MAAO,UACPC,YAAY,EACZH,IAAK,WAEP,CACEE,MAAO,eACPF,IAAK,eACLG,YAAY,MAiBtBhB,EAAkBiB,aAAe,CAC/BvB,UAAW,GACXO,aAAa,GAGf,O,oJC1DMiB,EAAa,CACjBC,IAAK,SAAA3B,GAAK,OAAI,sBAASA,IACvB4B,KAAMC,IACNC,aAGa,SAASC,EAAT,GAAkD,IAAD,EAAzBC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,YAC/C,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKC,MAAOD,SAAF,UAAEA,EAAaE,mBAAf,aAAE,EAA0BD,QACtC,gBAAC,IAAD,CAAWE,KAAK,KAAK1B,UAAU,QAC7B,gBAAC,EAAA2B,YAAD,CAAatC,WAAY2B,GAAaM,O,+BCP9C,IAVwB,SAAC1B,EAAOgC,GAE9B,IAAKA,EACH,OAAOhC,EAGT,IAAMiC,EAAQC,OAAOF,GACrB,OAAOhC,EAAMmC,QAAO,SAAAC,GAAI,OAAIH,EAAMI,KAAKD,EAAK9B","file":"component---src-pages-foundations-css-utilities-mdx-08d2eca2bc78f68dcb39.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/paragon/paragon/www/src/templates/default-mdx-page-template.jsx\";\nimport { graphql } from 'gatsby';\nimport { Table } from '~paragon-react'; // eslint-disable-line\n\nimport getCssSelectors from '../../utils/getCssSelectors.js';\nimport CSSUtilitiesTable from '../../components/CSSUtilitiesTable';\nexport const pageQuery = graphql`\n{\n  utilities: allCssUtilityClasses(\n    filter: {isUtility: {eq: true}},\n    sort: {fields: selector, order: ASC}\n  ) {\n    nodes {\n      selector\n      declarations\n    }\n  }\n}\n`;\nexport const _frontmatter = {};\nconst layoutProps = {\n  pageQuery,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1>{`CSS Utilities`}</h1>\n    <h3>{`Utility Classes`}</h3>\n    <CSSUtilitiesTable selectors={getCssSelectors(props.data.utilities.nodes)} mdxType=\"CSSUtilitiesTable\" />\n\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table } from '~paragon-react'; // eslint-disable-line\n\nfunction CSSUtilitiesTable({ selectors, showExample }) {\n  return (\n    <Table\n      className=\"pgn-doc__status-table\"\n      data={selectors.map(({ selector, declarations }) => ({\n        selector: <code>.{selector}</code>,\n        example: showExample ? (\n          <p\n            style={{\n              margin: '-.25em 0',\n              display: 'inline-block',\n              padding: '.25em .5em',\n              border: 'solid 1px transparent',\n            }}\n            className={selector}\n          >\n            Aa Bb Cc\n          </p>\n        ) : null,\n        declarations: (\n          <div>\n            {declarations.map(declaration => (\n              <code key={declaration} className=\"mb-0 text-muted\">\n                {declaration}\n              </code>\n            ))}\n          </div>\n        ),\n      }))}\n      columns={[\n        {\n          label: 'Utility Class Name',\n          key: 'selector',\n        },\n        {\n          label: 'Example',\n          hideHeader: true,\n          key: 'example',\n        },\n        {\n          label: 'Declarations',\n          key: 'declarations',\n          hideHeader: true,\n        },\n      ]}\n    />\n  );\n}\n\nCSSUtilitiesTable.propTypes = {\n  selectors: PropTypes.arrayOf(\n    PropTypes.shape({\n      selector: PropTypes.string,\n      declarations: PropTypes.arrayOf(PropTypes.string),\n    }),\n  ),\n  showExample: PropTypes.bool,\n};\n\nCSSUtilitiesTable.defaultProps = {\n  selectors: [],\n  showExample: false,\n};\n\nexport default CSSUtilitiesTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MDXProvider } from '@mdx-js/react';\nimport { Link } from 'gatsby';\nimport { Container } from '~paragon-react'; // eslint-disable-line\n\nimport CodeBlock from '../components/CodeBlock';\nimport Layout from '../components/PageLayout';\nimport SEO from '../components/SEO';\n\nconst shortcodes = {\n  pre: props => <div {...props} />,\n  code: CodeBlock,\n  Link,\n};\n\nexport default function PageTemplate({ children, pageContext }) {\n  return (\n    <Layout>\n      <SEO title={pageContext?.frontmatter?.title} />\n      <Container size=\"md\" className=\"py-5\">\n        <MDXProvider components={shortcodes}>{children}</MDXProvider>\n      </Container>\n    </Layout>\n  );\n}\n\nPageTemplate.propTypes = {\n  children: PropTypes.node.isRequired,\n  // Require mdx files to define their page title using frontmatter\n  pageContext: PropTypes.shape({\n    frontmatter: PropTypes.shape({\n      title: PropTypes.string,\n    }),\n  }).isRequired,\n};\n","/**\n * Given the `props` and a `fileName` like `aspect-ratio`, return the array of classes that\n * correspond to that file. This function exists to simplify the Thumbprint Atomic MDX.\n */\nconst getCssSelectors = (nodes, regExpStr) => {\n  // return Object.keys(props.data, fileName);\n  if (!regExpStr) {\n    return nodes;\n  }\n\n  const regex = RegExp(regExpStr);\n  return nodes.filter(rule => regex.test(rule.selector));\n};\n\nexport default getCssSelectors;\n"],"sourceRoot":""}