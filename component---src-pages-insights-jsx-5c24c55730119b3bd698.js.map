{"version":3,"sources":["webpack:///./src/pages/insights.jsx"],"names":["dependentProjects","dependentProjectsUsages","map","dependentUsage","count","usages","length","componentsUsage","reduce","accumulator","project","Object","keys","componentName","concat","name","folderName","version","componentUsageCount","ProjectsUsage","className","isSortable","itemCount","data","columns","Header","accessor","TableControlBar","Table","EmptyTable","content","TableFooter","ComponentUsage","componentUsageInProjects","ComponentsUsage","sort","key","title","defaultActiveKey","id","eventKey"],"mappings":"o1kHAKA,IAAMA,EAAoBC,EAAwBC,KAAI,SAAAC,GAAc,cAC/DA,GAD+D,IAElEC,MAAOD,EAAeE,OAAOC,YAGzBC,EAAkBN,EAAwBO,QAAO,SAACC,EAAaC,GAYnE,OAXAC,OAAOC,KAAKF,EAAQL,QAAQH,KAAI,SAAAW,GACzBJ,EAAYI,KACfJ,EAAYI,GAAiB,IAE/BJ,EAAYI,GAAiBJ,EAAYI,GAAeC,OAAO,CAC7DC,KAAML,EAAQK,KACdC,WAAYN,EAAQM,WACpBC,QAASP,EAAQO,QACjBC,oBAAqBR,EAAQL,OAAOQ,GAAeP,YAGhDG,IACN,IAGGU,EAAgB,kBACpB,yBAAKC,UAAU,aACb,wBAAIA,UAAU,QAAd,0CACA,kBAAC,IAAD,CACEC,YAAU,EACVC,UAAWtB,EAAkBM,OAC7BiB,KAAMvB,EACNwB,QAAS,CACP,CAAEC,OAAQ,eAAgBC,SAAU,cACpC,CAAED,OAAQ,kBAAmBC,SAAU,aAGzC,kBAAC,IAAUC,gBAAX,MACA,kBAAC,IAAUC,MAAX,MACA,kBAAC,IAAUC,WAAX,CAAsBC,QAAQ,gBAC9B,kBAAC,IAAUC,YAAX,SAMAC,EAAiB,SAAC,GAAD,IAAGjB,EAAH,EAAGA,KAAMkB,EAAT,EAASA,yBAAT,OACrB,yBAAKb,UAAU,QACb,wBAAIA,UAAU,QAAQL,GACtB,kBAAC,IAAD,CACEM,YAAU,EACVC,UAAWW,EAAyB3B,OACpCiB,KAAMU,EACNT,QAAS,CACP,CAAEC,OAAQ,eAAgBC,SAAU,cACpC,CAAED,OAAQ,kBAAmBC,SAAU,WACvC,CAAED,OAAQ,iBAAkBC,SAAU,yBAGxC,kBAAC,IAAUE,MAAX,MACA,kBAAC,IAAUC,WAAX,CAAsBC,QAAQ,iBAM9BI,EAAkB,kBACtB,yBAAKd,UAAU,aACZT,OAAOC,KAAKL,GAAiB4B,OAAOjC,KAAI,SAAAa,GAAI,OAC3C,kBAACiB,EAAD,CACEI,IAAKrB,EACLA,KAAMA,EACNkB,yBAA0B1B,EAAgBQ,UAMnC,qBACb,OACE,yBAAKK,UAAU,SACb,kBAAC,IAAD,CAAKiB,MAAM,mBACX,4BAAQjB,UAAU,QAChB,8CACA,sDAEF,kBAAC,IAAD,CAAMkB,iBAAiB,WAAWC,GAAG,4BACnC,kBAAC,IAAD,CAAKC,SAAS,WAAWH,MAAM,YAC7B,kBAAClB,EAAD,OAEF,kBAAC,IAAD,CAAKqB,SAAS,aAAaH,MAAM,cAC/B,kBAACH,EAAD","file":"component---src-pages-insights-jsx-5c24c55730119b3bd698.js","sourcesContent":["import React from 'react';\nimport { DataTable, Tabs, Tab } from '~paragon-react';\nimport SEO from '../components/seo';\nimport dependentProjectsUsages from '../../../dependent-usage.json';\n\nconst dependentProjects = dependentProjectsUsages.map(dependentUsage => ({\n  ...dependentUsage,\n  count: dependentUsage.usages.length,\n}));\n\nconst componentsUsage = dependentProjectsUsages.reduce((accumulator, project) => {\n  Object.keys(project.usages).map(componentName => {\n    if (!accumulator[componentName]) {\n      accumulator[componentName] = [];\n    }\n    accumulator[componentName] = accumulator[componentName].concat({\n      name: project.name,\n      folderName: project.folderName,\n      version: project.version,\n      componentUsageCount: project.usages[componentName].length,\n    })\n  })\n  return accumulator;\n}, {});\n\n// Paragon version in all projects\nconst ProjectsUsage = () => (\n  <div className=\"pt-5 mb-5\">\n    <h3 className=\"mb-4\">Projects in Open edX consuming Paragon</h3>\n    <DataTable\n      isSortable\n      itemCount={dependentProjects.length}\n      data={dependentProjects}\n      columns={[\n        { Header: 'Project Name', accessor: 'folderName' },\n        { Header: 'Paragon Version', accessor: 'version' },\n      ]}\n    >\n      <DataTable.TableControlBar />\n      <DataTable.Table />\n      <DataTable.EmptyTable content=\"No projects\" />\n      <DataTable.TableFooter />\n    </DataTable>\n  </div>\n);\n\n// Usage info about a single component\nconst ComponentUsage = ({ name, componentUsageInProjects }) => (\n  <div className=\"mb-5\">\n    <h3 className=\"mb-4\">{name}</h3>\n    <DataTable\n      isSortable\n      itemCount={componentUsageInProjects.length}\n      data={componentUsageInProjects}\n      columns={[\n        { Header: 'Project Name', accessor: 'folderName' },\n        { Header: 'Paragon Version', accessor: 'version' },\n        { Header: 'Instance count', accessor: 'componentUsageCount' },\n      ]}\n    >\n      <DataTable.Table />\n      <DataTable.EmptyTable content=\"No usages\" />\n    </DataTable>\n  </div>\n);\n\n// Usage info for all components\nconst ComponentsUsage = () => (\n  <div className=\"pt-5 mb-5\">\n    {Object.keys(componentsUsage).sort().map(name => (\n      <ComponentUsage\n        key={name}\n        name={name}\n        componentUsageInProjects={componentsUsage[name]}\n      />\n    ))}\n  </div>\n);\n\nexport default function () {\n  return (\n    <div className=\"w-100\">\n      <SEO title=\"Usage Insights\" />\n      <header className=\"mb-5\">\n        <h1>Usage Insights</h1>\n        <p>Last updated: 3-1-2021</p>\n      </header>\n      <Tabs defaultActiveKey=\"projects\" id=\"uncontrolled-tab-example\">\n        <Tab eventKey=\"projects\" title=\"Projects\">\n          <ProjectsUsage />\n        </Tab>\n        <Tab eventKey=\"components\" title=\"Components\">\n          <ComponentsUsage />\n        </Tab>\n      </Tabs>\n    </div>\n  );\n}\n\n"],"sourceRoot":""}